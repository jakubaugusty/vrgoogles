from picamera import mmalobj as mo, mmal
from signal import pause
from picamera import PiCamera
from time import sleep
from smbus2 import SMBus


import RPi.GPIO as GPIO
GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)
GPIO.setup(14, GPIO.OUT)
GPIO.output(14, GPIO.LOW)


camResW = 720
camResH = 640
camFramR = 30


cornerX = 000
cornerY = 000
windowSpacer = 0 # space between the 2 windows

camera = mo.MMALCamera()
splitter = mo.MMALSplitter()
render_l = mo.MMALRenderer()
render_r = mo.MMALRenderer()


camera.outputs[0].framesize = (camResW,camResH)

camera.outputs[0].framerate = camFramR
camera.outputs[0].commit()

p = render_l.inputs[0].params[mmal.MMAL_PARAMETER_DISPLAYREGION]
p.set = mmal.MMAL_DISPLAY_SET_FULLSCREEN | mmal.MMAL_DISPLAY_SET_DEST_RECT
p.fullscreen = False

p.dest_rect = mmal.MMAL_RECT_T(cornerX, cornerY, camResW, camResH)
render_l.inputs[0].params[mmal.MMAL_PARAMETER_DISPLAYREGION] = p

p.dest_rect = mmal.MMAL_RECT_T(cornerX, 640, camResW, camResH)
render_r.inputs[0].params[mmal.MMAL_PARAMETER_DISPLAYREGION] = p


splitter.connect(camera.outputs[0])
render_l.connect(splitter.outputs[0])
render_r.connect(splitter.outputs[1])

splitter.enable()
render_l.enable()
render_r.enable()
while True:
    with SMBus(1) as bus:
        b=bus.read_byte_data(0x0b,0x0e)
        print(b)
        if b < 10:
            print("Bateria")
            GPIO.output(14, GPIO.HIGH)
            sleep(1)
            GPIO.output(14, GPIO.LOW)
    sleep(5)
pause()



